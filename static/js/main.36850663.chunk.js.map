{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","Alert","alert","role","word","lower","charAt","slice","capitalise","msg","defaultProps","about","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oMAKe,SAASA,EAAOC,GAC3B,OACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACA,sBAAKD,UAAU,kBAAf,UAEE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,oBAAIL,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SAEE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,sBAMJ,sBAAKF,UAAS,sCAA8C,UAAbD,EAAME,KAAe,OAAO,SAA3E,UACA,uBAAOD,UAAU,mBAAmBM,QAASP,EAAMQ,WAAYH,KAAK,WAAWC,GAAG,2BAClF,uBAAOL,UAAU,mBAAmBQ,QAAQ,yBAA5C,yCCxBG,SAASC,EAASV,GAC7B,MAAoBW,mBAAS,IAA7B,mBAAMC,EAAN,KAAWC,EAAX,KAuCA,OACI,qCACA,sBAAKZ,UAAU,YAAWa,MAAO,CAACC,MAAmB,SAAbf,EAAME,KAAc,QAAQ,WAApE,UACA,6BAAMF,EAAMgB,UACZ,8BACA,0BAAUf,UAAU,eAAegB,MAAOL,EAAMM,SAX/B,SAACC,GAElBN,EAAQM,EAAMC,OAAOH,QASqDH,MAAO,CAACO,gBAA6B,UAAbrB,EAAME,KAAe,QAAQ,OAAOa,MAAmB,SAAbf,EAAME,KAAc,QAAQ,SAAUI,GAAG,QAAQgB,KAAK,QAElM,wBAAQrB,UAAU,4BAA4BM,QA3C9B,WAEhB,IAAIgB,EAAQX,EAAKY,cACjBX,EAAQU,GACRvB,EAAMyB,UAAU,yBAAyB,YAuCzC,kCACA,wBAAQxB,UAAU,4BAA4BM,QApC7B,WAEjB,IAAIgB,EAAQX,EAAKc,cACjBb,EAAQU,GACRvB,EAAMyB,UAAU,yBAAyB,YAgCzC,kCACA,wBAAQxB,UAAU,4BAA4BM,QA7BjC,WAGbM,EADY,IAEZb,EAAMyB,UAAU,kBAAkB,YAyBlC,wBACA,wBAAQxB,UAAU,4BAA4BM,QAtBjC,WACb,IAAIK,EAAKe,SAASC,eAAe,SACjChB,EAAKiB,SACLC,UAAUC,UAAUC,UAAUpB,EAAKK,OACnCjB,EAAMyB,UAAU,sBAAsB,YAkBtC,0BASF,sBAAKxB,UAAU,iBAAgBa,MAAO,CAACC,MAAmB,SAAbf,EAAME,KAAc,QAAQ,WAAzE,UACI,mDACA,8BAAG,4BAAIU,EAAKqB,MAAM,KAAKC,SAAvB,cAA6C,4BAAItB,EAAKsB,SAAtD,iBACA,8BAAG,4BAAI,KAAQtB,EAAKqB,MAAM,IAAIC,SAA9B,sBACA,yCACA,4BAAItB,EAAKsB,OAAO,EAAEtB,EAAK,mDChElB,SAASuB,EAAMnC,GAM1B,OAEAA,EAAMoC,OAAS,sBAAKnC,UAAS,sBAAiBD,EAAMoC,MAAM/B,KAA7B,gCAAiEgC,KAAK,QAApF,UACf,iCAPiB,SAACC,GACd,IAAMC,EAAMD,EAAKZ,cACjB,OAAOa,EAAMC,OAAO,GAAGhB,cAAgBe,EAAME,MAAM,GAK9CC,CAAW1C,EAAMoC,MAAM/B,QADjB,KACmCL,EAAMoC,MAAMO,OF6BlE5C,EAAO6C,aAAa,CAClBxC,MAAM,iBACNyC,MAAM,SGuCOC,MApEf,WAGE,MAAqBnC,mBAAS,SAA9B,mBAAOT,EAAP,KAAY6C,EAAZ,KAEA,EAAsBpC,mBAAS,MAA/B,mBAAMyB,EAAN,KAAYY,EAAZ,KAEMvB,EAAU,SAACwB,EAAQ5C,GAGvB2C,EAAS,CACPL,IAAIM,EACJ5C,KAAKA,IAGP6C,YAAW,WACTF,EAAS,QACR,OAyBL,OACE,qCAEF,cAACjD,EAAD,CAAQK,MAAM,YAAYF,KAAMA,EAAMM,WAlBrB,WACL,UAAPN,GACD6C,EAAQ,QACRpB,SAASwB,KAAKrC,MAAMO,gBAAgB,UACpCI,EAAU,6BAA8B,WACxCE,SAASvB,MAAM,0BAGf2C,EAAQ,SACRpB,SAASwB,KAAKrC,MAAMO,gBAAgB,QACpCI,EAAU,8BAA8B,WACxCE,SAASvB,MAAM,6BAQnB,cAAC+B,EAAD,CAAOC,MAAOA,IAEd,qBAAKnC,UAAU,iBAAf,SASM,cAACS,EAAD,CAAUe,UAAWA,EAAWT,QAAQ,sBAAsBd,KAAMA,UC1D7DkD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASC,eAAe,SAM1BwB,K","file":"static/js/main.36850663.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom'\r\n\r\n//Function bLinksed component \r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" to=\"/about\">{props.about}</Link>\r\n              </li> */}\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\n//PropTypes are basically the values which we are passing i.e properties \r\nNavbar.propTypes={\r\n  title:PropTypes.string.isRequired,\r\n  about:PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps={\r\n  title:\"Set title here\",\r\n  about:\"about\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const[text,setText]=useState(\"\");\r\n    \r\n    //Uppercase Click\r\n    const handleUpClick=()=>{\r\n        // console.log(\"Uppercase was clicked \" + text)\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase\",\"success\");\r\n    }\r\n\r\n    //Lowercase Click\r\n    const handleLowClick=()=>{\r\n        // console.log(\"Uppercase was clicked \" + text)\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase\",\"success\");\r\n    }\r\n\r\n    //Clear Text Functionality\r\n    const clearClick=()=>{\r\n        // console.log(\"Uppercase was clicked \" + text)\r\n        let newText='';\r\n        setText(newText);\r\n        props.showAlert(\"Text is cleared\",\"success\");\r\n    }\r\n    \r\n    //Copy Text\r\n    const handleCopy=()=>{\r\n        let text=document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to clipboard\",\"success\");\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        // console.log(\"On Change\")\r\n        setText(event.target.value)\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\"style={{color:props.mode==='dark'?'white':'#0d1a44'}}>\r\n        <h1 >{props.heading}</h1>\r\n        <div>\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='light'?'white':'grey',color:props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={clearClick}>Clear Text</button>\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={handleCopy}>Copy Text</button>\r\n\r\n        {/* <button className=\"btn btn-primary mx-2 my-2\" onClick={searchClick}>Search a Word</button> */}\r\n        {/* <input type=\"text\" value={text} id=\"myInput\"/> */}\r\n\r\n        {/* Copy to clipboard */}\r\n        {/* <button onclick={copyClick} onChange={handleCopyText}>Copy To clipboard</button> */}\r\n\r\n      </div>\r\n      <div className=\"container my-2\"style={{color:props.mode==='dark'?'white':'#0d1a44'}}>\r\n          <h2>Your Text Summary</h2>\r\n          <p><b>{text.split(\" \").length}</b> words and <b>{text.length}</b> characters</p>\r\n          <p><b>{0.008 * text.split(\"\").length}</b> Minutes to read</p>\r\n          <h2>Preview</h2>\r\n          <p>{text.length>0?text:\"Enter somethng above to preview it here!\"}</p>\r\n      </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    \r\n    const capitalise=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n    \r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{capitalise(props.alert.type)}</strong>: {props.alert.msg}</div>            \r\n    \r\n    )\r\n}\r\n\r\n\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React,{useState} from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  //Whether dark mode is enabled or not\n  const [mode,setMode]=useState('light');\n\n  const[alert,setAlert]=useState(null);\n\n  const showAlert=(message,type)=>{\n    \n    //Alert Object\n    setAlert({\n      msg:message,\n      type:type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  // const [alert,setAlert]=useState(null);\n\n  // const showAlert=(message,type)=>{\n  //   setAlert({\n  //     msg: message,\n  //     type: type\n  //   })\n  // }\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor='#0d1a44';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title='TextUtils - Dark Mode';\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n      document.title='TextUtils - Light Mode';\n    }\n  }\n\n  return (\n    <>\n  {/* <Router> */}\n  <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n  <Alert alert={alert}/>\n  {/* <Alert alert={alert}/> */}\n  <div className=\"container my-3\">\n    \n  {/* <Switch> */}\n        {/* /users --> component1\n        /users/home --> component2 */}\n           {/* <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n        <TextForm showAlert={showAlert} heading=\"Enter the text here\" mode={mode}/> \n          {/* </Route> */}\n  {/* </Switch>   */}\n  </div>\n  {/* </Router> */}\n  {/* <Navbar/> */}\n  {/* <Navbar title=\"TextUtils\" about=\"About textUtils\"/> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}