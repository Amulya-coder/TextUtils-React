{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","about","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","filter","element","About","myStyle","Alert","height","alert","role","word","lower","charAt","slice","capitalise","msg","defaultProps","App","setMode","setAlert","message","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mOAKe,SAASA,EAAOC,GAC3B,OACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACA,sBAAKD,UAAU,kBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,eAAeE,GAAG,IAAlC,SAAuCH,EAAMI,QAE7C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,qBAAIL,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACA,cAAC,IAAD,CAAMA,UAAU,YAAY,eAAa,OAAOE,GAAG,IAAnD,oBAGC,oBAAIF,UAAU,WAAd,SACC,cAAC,IAAD,CAAMA,UAAU,YAAYE,GAAG,SAA/B,SAAyCH,EAAMO,aAGnD,sBAAKN,UAAS,sCAA8C,UAAbD,EAAME,KAAe,OAAO,SAA3E,UACA,uBAAOD,UAAU,mBAAmBO,QAASR,EAAMS,WAAYJ,KAAK,WAAWC,GAAG,2BAClF,uBAAOL,UAAU,mBAAmBS,QAAQ,yBAA5C,yCCxBG,SAASC,EAASX,GAE7B,MAAoBY,mBAAS,IAA7B,mBAAMC,EAAN,KAAWC,EAAX,KAqCA,OACI,qCACA,sBAAKb,UAAU,YAAWc,MAAO,CAACC,MAAmB,SAAbhB,EAAME,KAAc,QAAQ,WAApE,UACA,oBAAID,UAAU,OAAd,SAAsBD,EAAMiB,UAC5B,8BACA,0BAAUhB,UAAU,eAAeiB,MAAOL,EAAMM,SAX/B,SAACC,GAElBN,EAAQM,EAAMC,OAAOH,QASqDH,MAAO,CAACO,gBAA6B,UAAbtB,EAAME,KAAe,QAAQ,UAAUc,MAAmB,SAAbhB,EAAME,KAAc,QAAQ,SAAUI,GAAG,QAAQiB,KAAK,QAErM,wBAAQC,SAAwB,IAAdX,EAAKY,OAAYxB,UAAU,4BAA4BO,QAzCzD,WAEhB,IAAIkB,EAAQb,EAAKc,cACjBb,EAAQY,GACR1B,EAAM4B,UAAU,yBAAyB,YAqCzC,kCACA,wBAAQJ,SAAwB,IAAdX,EAAKY,OAAYxB,UAAU,4BAA4BO,QAlCxD,WAEjB,IAAIkB,EAAQb,EAAKgB,cACjBf,EAAQY,GACR1B,EAAM4B,UAAU,yBAAyB,YA8BzC,kCACA,wBAAQJ,SAAwB,IAAdX,EAAKY,OAAYxB,UAAU,4BAA4BO,QA3B5D,WAGbM,EADY,IAEZd,EAAM4B,UAAU,kBAAkB,YAuBlC,wBACA,wBAAQJ,SAAwB,IAAdX,EAAKY,OAAYxB,UAAU,4BAA4BO,QApB5D,WACbsB,UAAUC,UAAUC,UAAUnB,GAC9Bb,EAAM4B,UAAU,sBAAsB,YAkBtC,0BAGF,sBAAK3B,UAAU,iBAAgBc,MAAO,CAACC,MAAmB,SAAbhB,EAAME,KAAc,QAAQ,WAAzE,UACI,mDACA,8BAAG,4BAAIW,EAAKoB,MAAM,uEAAOC,QAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQV,UAAaA,SAAxE,cAA8F,4BAAIZ,EAAKY,SAAvG,iBACA,8BAAG,4BAAI,KAAQZ,EAAKoB,MAAM,KAAKC,QAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQV,UAAaA,SAA9E,sBACA,yCACA,4BAAIZ,EAAKY,OAAO,EAAEZ,EAAK,8BCzDlB,SAASuB,EAAMpC,GAO5B,IAAIqC,EAAQ,CACVrB,MAAmB,SAAbhB,EAAME,KAAc,QAAQ,gBAClCoB,gBAA6B,SAAbtB,EAAME,KAAc,iBAAiB,SAKvD,OACE,sBAAKD,UAAU,YAAYc,MAAO,CAACC,MAAmB,SAAbhB,EAAME,KAAc,QAAQ,iBAArE,UACE,0CACF,sBAAKD,UAAU,YAAYK,GAAG,mBAA9B,UACA,sBAAKL,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBK,GAAG,aAApC,SACE,wBAAQL,UAAU,mBAAmBc,MAAOsB,EAAUhC,KAAK,SAAS,iBAAe,WAAW,iBAAe,eAAe,gBAAc,OAAO,gBAAc,cAA/J,SACE,2DAGJ,qBAAKC,GAAG,cAAcL,UAAU,mCAAmC,kBAAgB,aAAa,iBAAe,oBAA/G,SACE,sBAAKA,UAAU,iBAAiBc,MAAOsB,EAAvC,UACE,+CADF,6GAKJ,sBAAKpC,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBK,GAAG,aAApC,SACE,wBAAQL,UAAU,6BAA6Bc,MAAOsB,EAAShC,KAAK,SAAS,iBAAe,WAAW,iBAAe,eAAe,gBAAc,QAAQ,gBAAc,cAAzK,SACC,qDAGH,qBAAKC,GAAG,cAAcL,UAAU,8BAA8B,kBAAgB,aAAa,iBAAe,oBAA1G,SACE,sBAAKA,UAAU,iBAAiBc,MAAOsB,EAAvC,UACE,+CADF,8OAMJ,sBAAKpC,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBK,GAAG,eAApC,SACE,wBAAQL,UAAU,6BAA6Bc,MAAOsB,EAAShC,KAAK,SAAS,iBAAe,WAAW,iBAAe,iBAAiB,gBAAc,QAAQ,gBAAc,gBAA3K,SACE,4DAGJ,qBAAKC,GAAG,gBAAgBL,UAAU,8BAA8B,kBAAgB,eAAe,iBAAe,oBAA9G,SACE,sBAAKA,UAAU,iBAAiBc,MAAOsB,EAAvC,UACE,yFADF,6KClDO,SAASC,EAAMtC,GAM1B,OACA,qBAAKe,MAAO,CAACwB,OAAO,QAApB,SACCvC,EAAMwC,OAAS,sBAAKvC,UAAS,sBAAiBD,EAAMwC,MAAMnC,KAA7B,gCAAiEoC,KAAK,QAApF,UAChB,iCAPiB,SAACC,GACd,IAAMC,EAAMD,EAAKb,cACjB,OAAOc,EAAMC,OAAO,GAAGjB,cAAgBgB,EAAME,MAAM,GAK9CC,CAAW9C,EAAMwC,MAAMnC,QADhB,KACkCL,EAAMwC,MAAMO,SH6BlEhD,EAAOiD,aAAa,CAClB5C,MAAM,iBACNG,MAAM,S,WIuCO0C,MApEf,WAGE,MAAqBrC,mBAAS,SAA9B,mBAAOV,EAAP,KAAYgD,EAAZ,KAEA,EAAsBtC,mBAAS,MAA/B,mBAAM4B,EAAN,KAAYW,EAAZ,KAEMvB,EAAU,SAACwB,EAAQ/C,GAGvB8C,EAAS,CACPJ,IAAIK,EACJ/C,KAAKA,IAGPgD,YAAW,WACTF,EAAS,QACR,OAyBL,OACE,mCACF,eAAC,IAAD,WACA,cAACpD,EAAD,CAAQK,MAAM,YAAYF,KAAMA,EAAMO,WAlBrB,WACL,UAAPP,GACDgD,EAAQ,QACRI,SAASC,KAAKxC,MAAMO,gBAAgB,gBACpCM,EAAU,6BAA8B,aAIxCsB,EAAQ,SACRI,SAASC,KAAKxC,MAAMO,gBAAgB,QACpCM,EAAU,8BAA8B,eAS5C,cAACU,EAAD,CAAOE,MAAOA,IAEd,qBAAKvC,UAAU,iBAAf,SAEA,eAAC,IAAD,WAGU,cAAC,IAAD,CAAOuD,OAAK,EAACC,KAAK,SAAlB,SACA,cAACrB,EAAD,CAAOlC,KAAMA,MAEf,cAAC,IAAD,CAAOsD,OAAK,EAACC,KAAK,IAAlB,SACF,cAAC9C,EAAD,CAAUiB,UAAWA,EAAWX,QAAQ,wEAAwEf,KAAMA,iBC1D/GwD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFf,SAASgB,eAAe,SAM1BZ,M","file":"static/js/main.fca2047c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\n\r\n//Function bLinksed component \r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n          {/* <a className=\"navbar-brand\" href=\"#\">{props.title}</a> */}\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n              <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">Home</Link>\r\n                {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a> */}\r\n              </li>\r\n               <li className=\"nav-item\"> \r\n                <Link className=\"nav-link \" to=\"/about\">{props.about}</Link>\r\n              </li> \r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\n//PropTypes are basically the values which we are passing i.e properties \r\nNavbar.propTypes={\r\n  title:PropTypes.string.isRequired,\r\n  about:PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps={\r\n  title:\"Set title here\",\r\n  about:\"about\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    \r\n    const[text,setText]=useState(\"\");\r\n    \r\n    //Uppercase Click\r\n    const handleUpClick=()=>{\r\n        // console.log(\"Uppercase was clicked \" + text)\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase\",\"success\");\r\n    }\r\n\r\n    //Lowercase Click\r\n    const handleLowClick=()=>{\r\n        // console.log(\"Uppercase was clicked \" + text)\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase\",\"success\");\r\n    }\r\n\r\n    //Clear Text Functionality\r\n    const clearClick=()=>{\r\n        // console.log(\"Uppercase was clicked \" + text)\r\n        let newText='';\r\n        setText(newText);\r\n        props.showAlert(\"Text is cleared\",\"success\");\r\n    }\r\n    \r\n    //Copy Text\r\n    const handleCopy=()=>{\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Copied to clipboard\",\"success\");\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        // console.log(\"On Change\")\r\n        setText(event.target.value)\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\"style={{color:props.mode==='dark'?'white':'#0d1a44'}}>\r\n        <h1 className='mb-4'>{props.heading}</h1>\r\n        <div>\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='light'?'white':'#13466e',color:props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={clearClick}>Clear Text</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleCopy}>Copy Text</button>\r\n\r\n      </div>\r\n      <div className=\"container my-2\"style={{color:props.mode==='dark'?'white':'#0d1a44'}}>\r\n          <h2>Your Text Summary</h2>\r\n          <p><b>{text.split(/\\s/s).filter((element)=>{return element.length!==0}).length}</b> words and <b>{text.length}</b> characters</p>\r\n          <p><b>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length}</b> Minutes to read</p>\r\n          <h2>Preview</h2>\r\n          <p>{text.length>0?text:\"Nothing to preview!\"}</p>\r\n      </div>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About(props) {\r\n\r\n  // const [myStyle,setMyStyle]=useState(initialState)\r\n  // const [myStyle,setMyStyle]= useState({\r\n  //   color:'black',\r\n  //   backgroundColor:'white'\r\n  // })\r\n  let myStyle={\r\n    color:props.mode==='dark'?'white':'rgb(16 45 84)',\r\n    backgroundColor:props.mode==='dark'?'rgb(36 74 104)':'white',\r\n    \r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"container\" style={{color:props.mode==='dark'?'white':'rgb(16 45 84)'}}>\r\n      <h1>About Us</h1>\r\n    <div className=\"accordion\" id=\"accordionExample\">\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"headingOne\">\r\n        <button className=\"accordion-button\" style={myStyle}  type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n          <strong>Analyze your text</strong>\r\n        </button>\r\n      </h2>\r\n      <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n        <div className=\"accordion-body\" style={myStyle}>\r\n          <strong>TextUtils</strong> gives you a way to analyze your text quickly and efficiently. Be it word count or character count \r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n         <strong>Free to use</strong>\r\n        </button>\r\n      </h2>\r\n      <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n        <div className=\"accordion-body\" style={myStyle}>\r\n          <strong>TextUtils</strong> is a free character counter tool that provides instant character count & word count\r\n          statistics for a given test. TextUtils repots the number of words and characters. This is suitable for writing text with character/word limit.  \r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"headingThree\">\r\n        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n          <strong>Browser Compatible</strong>\r\n        </button>\r\n      </h2>\r\n      <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n        <div className=\"accordion-body\" style={myStyle}>\r\n          <strong>This word counter software works in any web browers</strong> such as Chrome, Firefox, Internet Explorer,Safari, Opera. It suits to count characters in \r\n          facebook, blogs, books, excel document, pdf document, essays etc.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    \r\n    const capitalise=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n    <div style={{height:'50px'}}>\r\n    {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{capitalise(props.alert.type)}</strong>: {props.alert.msg}</div>}            \r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport React,{useState} from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n\n  //Whether dark mode is enabled or not\n  const [mode,setMode]=useState('light');\n\n  const[alert,setAlert]=useState(null);\n\n  const showAlert=(message,type)=>{\n    \n    //Alert Object\n    setAlert({\n      msg:message,\n      type:type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  // const [alert,setAlert]=useState(null);\n\n  // const showAlert=(message,type)=>{\n  //   setAlert({\n  //     msg: message,\n  //     type: type\n  //   })\n  // }\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor='rgb(16 45 84)';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      // document.title='TextUtils - Dark Mode';\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n      // document.title='TextUtils - Light Mode';\n    }\n  }\n\n  return (\n    <>\n  <Router>\n  <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n  <Alert alert={alert}/>\n  {/* <Alert alert={alert}/> */}\n  <div className=\"container my-3\">\n    \n  <Switch>\n        {/* /users --> component1\n        /users/home --> component2 */}\n            <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route>\n          <Route exact path=\"/\"> \n        <TextForm showAlert={showAlert} heading=\"Try TextUtils - Word Counter, Character Counter, Remove extra spaces \" mode={mode}/> \n           </Route> \n  </Switch>  \n  </div>\n  </Router> \n   \n   {/* <Navbar title=\"TextUtils\" about=\"About textUtils\"/> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}